name: "CI"

on:
  pull_request:

jobs:
  nodejs-checks:
    name: Lint, Build, Format and Auto-Commit changes
    runs-on: ubuntu-latest
    env:
      COMMIT_MESSAGE: "Modified files from CI"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 2
          token: ${{ secrets.ACTION_PAT }}

      - name: Check for workflow loop using commit messages
        run: |
          CURRENT_COMMIT_MESSAGE=$(git show -s --pretty=%B HEAD)
          LAST_COMMIT_MESSAGE=$(git show -s --pretty=%B HEAD~1)

          if [ "$CURRENT_COMMIT_MESSAGE" == "$COMMIT_MESSAGE" ] && \
            [ "$LAST_COMMIT_MESSAGE" == "$COMMIT_MESSAGE" ]; then
            echo "It looks like the last two commits are from CI. This indicates a loop."
            exit 1
          fi

      - name: Setup Node.js & pnpm
        uses: pnpm/action-setup@v4

      - name: Install dependencies
        run: pnpm install

      - name: Run syncpack
        run: |
          pnpm exec syncpack fix-mismatches
          pnpm install

      - name: "Services: Start Test Services"
        uses: hoverkraft-tech/compose-action@v2.2.0
        with:
          compose-file: "./docker/compose-ci.yaml"

      - name: Generate backend files
        run: cd grassroots-backend && pnpm run gen-files-only

      - name: Build backend
        run: cd grassroots-backend && pnpm run build

      - name: Temporarily setup symlink for frontend builds
        run: ln -sfn $(pwd)/grassroots-backend/src/grassroots-shared $(pwd)/grassroots-frontend/src/grassroots-shared

      - name: Build frontend
        run: cd grassroots-frontend && ls && ls src && ls src/grassroots-shared && pnpm run build:ci

      - name: Run TypeScript Checks
        run: |
          pnpm exec tsc --noEmit --project grassroots-frontend
          pnpm exec tsc --noEmit --project grassroots-backend

      - name: Migrate DB
        run: cd grassroots-backend && pnpm exec mikro-orm migration:up

      - name: Setup tbls
        uses: k1low/setup-tbls@v1

      - name: Run tbls to generate database document
        run: tbls doc --rm-dist

      - name: Run ESLint
        run: pnpm exec eslint . --output-file eslint_report.json --format json --fix
        continue-on-error: true

      - name: Format code with Prettier
        run: pnpm exec prettier --write .

      - name: Push Changes
        id: auto-commit-action
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: ${{ env.COMMIT_MESSAGE }}
          commit_options: "--no-verify"

      - name: Fail workflow if files were modified
        if: steps.auto-commit-action.outputs.changes_detected == 'true'
        run: |
          echo "There were modified files after running CI."
          exit 1

      - name: Annotate Code Linting Results
        uses: ataylorme/eslint-annotate-action@3.0.0

  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    env:
      GITHUB_ACTIONS: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js & pnpm
        uses: pnpm/action-setup@v4

      - name: Install dependencies
        run: pnpm install

      - name: Run tstyche
        run: cd grassroots-backend && pnpm run test:tstyche

      - name: Check mikro-orm migration
        run: |
          if ! cd grassroots-backend && pnpm exec mikro-orm migration:check 2>&1 | grep -q "No changes required, schema is up-to-date"; then
            exit 1
          fi

      - name: "Services: Start Test Services"
        uses: hoverkraft-tech/compose-action@v2.2.0
        with:
          compose-file: "./docker/compose-ci.yaml"

      - name: Tests
        run: cd grassroots-backend && pnpm run test:ci

      - name: Install Playwright Browsers
        run: npx playwright install chromium

      - name: Add hosts entry for grassroots.org
        run: |
          echo "127.0.0.1 grassroots.org" | sudo tee -a /etc/hosts
          echo "Added grassroots.org to hosts file"

      - name: BDD
        id: bdd
        run: npm run test:bdd
        env:
          BASE_URL: http://grassroots.org
          API_URL: http://localhost:3000
        continue-on-error: true

      - name: Upload BDD Test Screenshots
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: bdd-test-screenshots
          path: test-results/screenshots/
          if-no-files-found: ignore
          retention-days: 7

      - name: Upload Cucumber Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cucumber-report
          path: |
            cucumber-report.html
            cucumber-report.json
          if-no-files-found: ignore
          retention-days: 7

      - name: Check BDD Test Results
        if: steps.bdd.outcome == 'failure'
        run: exit 1
