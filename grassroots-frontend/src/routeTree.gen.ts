/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as UsersImport } from './routes/Users'
import { Route as SharedSearchImport } from './routes/SharedSearch'
import { Route as SearchImport } from './routes/Search'
import { Route as CreateContactImport } from './routes/CreateContact'
import { Route as IndexImport } from './routes/index'
import { Route as OrganizersIndexImport } from './routes/Organizers/index'
import { Route as OrganizersOrganizationIdImport } from './routes/Organizers/$organizationId'

// Create/Update Routes

const UsersRoute = UsersImport.update({
  id: '/Users',
  path: '/Users',
  getParentRoute: () => rootRoute,
} as any)

const SharedSearchRoute = SharedSearchImport.update({
  id: '/SharedSearch',
  path: '/SharedSearch',
  getParentRoute: () => rootRoute,
} as any)

const SearchRoute = SearchImport.update({
  id: '/Search',
  path: '/Search',
  getParentRoute: () => rootRoute,
} as any)

const CreateContactRoute = CreateContactImport.update({
  id: '/CreateContact',
  path: '/CreateContact',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const OrganizersIndexRoute = OrganizersIndexImport.update({
  id: '/Organizers/',
  path: '/Organizers/',
  getParentRoute: () => rootRoute,
} as any)

const OrganizersOrganizationIdRoute = OrganizersOrganizationIdImport.update({
  id: '/Organizers/$organizationId',
  path: '/Organizers/$organizationId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/CreateContact': {
      id: '/CreateContact'
      path: '/CreateContact'
      fullPath: '/CreateContact'
      preLoaderRoute: typeof CreateContactImport
      parentRoute: typeof rootRoute
    }
    '/Search': {
      id: '/Search'
      path: '/Search'
      fullPath: '/Search'
      preLoaderRoute: typeof SearchImport
      parentRoute: typeof rootRoute
    }
    '/SharedSearch': {
      id: '/SharedSearch'
      path: '/SharedSearch'
      fullPath: '/SharedSearch'
      preLoaderRoute: typeof SharedSearchImport
      parentRoute: typeof rootRoute
    }
    '/Users': {
      id: '/Users'
      path: '/Users'
      fullPath: '/Users'
      preLoaderRoute: typeof UsersImport
      parentRoute: typeof rootRoute
    }
    '/Organizers/$organizationId': {
      id: '/Organizers/$organizationId'
      path: '/Organizers/$organizationId'
      fullPath: '/Organizers/$organizationId'
      preLoaderRoute: typeof OrganizersOrganizationIdImport
      parentRoute: typeof rootRoute
    }
    '/Organizers/': {
      id: '/Organizers/'
      path: '/Organizers'
      fullPath: '/Organizers'
      preLoaderRoute: typeof OrganizersIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/CreateContact': typeof CreateContactRoute
  '/Search': typeof SearchRoute
  '/SharedSearch': typeof SharedSearchRoute
  '/Users': typeof UsersRoute
  '/Organizers/$organizationId': typeof OrganizersOrganizationIdRoute
  '/Organizers': typeof OrganizersIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/CreateContact': typeof CreateContactRoute
  '/Search': typeof SearchRoute
  '/SharedSearch': typeof SharedSearchRoute
  '/Users': typeof UsersRoute
  '/Organizers/$organizationId': typeof OrganizersOrganizationIdRoute
  '/Organizers': typeof OrganizersIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/CreateContact': typeof CreateContactRoute
  '/Search': typeof SearchRoute
  '/SharedSearch': typeof SharedSearchRoute
  '/Users': typeof UsersRoute
  '/Organizers/$organizationId': typeof OrganizersOrganizationIdRoute
  '/Organizers/': typeof OrganizersIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/CreateContact'
    | '/Search'
    | '/SharedSearch'
    | '/Users'
    | '/Organizers/$organizationId'
    | '/Organizers'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/CreateContact'
    | '/Search'
    | '/SharedSearch'
    | '/Users'
    | '/Organizers/$organizationId'
    | '/Organizers'
  id:
    | '__root__'
    | '/'
    | '/CreateContact'
    | '/Search'
    | '/SharedSearch'
    | '/Users'
    | '/Organizers/$organizationId'
    | '/Organizers/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CreateContactRoute: typeof CreateContactRoute
  SearchRoute: typeof SearchRoute
  SharedSearchRoute: typeof SharedSearchRoute
  UsersRoute: typeof UsersRoute
  OrganizersOrganizationIdRoute: typeof OrganizersOrganizationIdRoute
  OrganizersIndexRoute: typeof OrganizersIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CreateContactRoute: CreateContactRoute,
  SearchRoute: SearchRoute,
  SharedSearchRoute: SharedSearchRoute,
  UsersRoute: UsersRoute,
  OrganizersOrganizationIdRoute: OrganizersOrganizationIdRoute,
  OrganizersIndexRoute: OrganizersIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/CreateContact",
        "/Search",
        "/SharedSearch",
        "/Users",
        "/Organizers/$organizationId",
        "/Organizers/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/CreateContact": {
      "filePath": "CreateContact.tsx"
    },
    "/Search": {
      "filePath": "Search.tsx"
    },
    "/SharedSearch": {
      "filePath": "SharedSearch.tsx"
    },
    "/Users": {
      "filePath": "Users.tsx"
    },
    "/Organizers/$organizationId": {
      "filePath": "Organizers/$organizationId.tsx"
    },
    "/Organizers/": {
      "filePath": "Organizers/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
