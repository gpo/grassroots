/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root';
import { Route as SharedSearchImport } from './routes/shared-search';
import { Route as SearchImport } from './routes/search';
import { Route as CreateContactImport } from './routes/create-contact';
import { Route as AuthImport } from './routes/auth';
import { Route as IndexImport } from './routes/index';

// Create/Update Routes

const SharedSearchRoute = SharedSearchImport.update({
  id: '/shared-search',
  path: '/shared-search',
  getParentRoute: () => rootRoute,
} as any);

const SearchRoute = SearchImport.update({
  id: '/search',
  path: '/search',
  getParentRoute: () => rootRoute,
} as any);

const CreateContactRoute = CreateContactImport.update({
  id: '/create-contact',
  path: '/create-contact',
  getParentRoute: () => rootRoute,
} as any);

const AuthRoute = AuthImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    '/auth': {
      id: '/auth';
      path: '/auth';
      fullPath: '/auth';
      preLoaderRoute: typeof AuthImport;
      parentRoute: typeof rootRoute;
    };
    '/create-contact': {
      id: '/create-contact';
      path: '/create-contact';
      fullPath: '/create-contact';
      preLoaderRoute: typeof CreateContactImport;
      parentRoute: typeof rootRoute;
    };
    '/search': {
      id: '/search';
      path: '/search';
      fullPath: '/search';
      preLoaderRoute: typeof SearchImport;
      parentRoute: typeof rootRoute;
    };
    '/shared-search': {
      id: '/shared-search';
      path: '/shared-search';
      fullPath: '/shared-search';
      preLoaderRoute: typeof SharedSearchImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute;
  '/auth': typeof AuthRoute;
  '/create-contact': typeof CreateContactRoute;
  '/search': typeof SearchRoute;
  '/shared-search': typeof SharedSearchRoute;
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute;
  '/auth': typeof AuthRoute;
  '/create-contact': typeof CreateContactRoute;
  '/search': typeof SearchRoute;
  '/shared-search': typeof SharedSearchRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  '/': typeof IndexRoute;
  '/auth': typeof AuthRoute;
  '/create-contact': typeof CreateContactRoute;
  '/search': typeof SearchRoute;
  '/shared-search': typeof SharedSearchRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: '/' | '/auth' | '/create-contact' | '/search' | '/shared-search';
  fileRoutesByTo: FileRoutesByTo;
  to: '/' | '/auth' | '/create-contact' | '/search' | '/shared-search';
  id:
    | '__root__'
    | '/'
    | '/auth'
    | '/create-contact'
    | '/search'
    | '/shared-search';
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  AuthRoute: typeof AuthRoute;
  CreateContactRoute: typeof CreateContactRoute;
  SearchRoute: typeof SearchRoute;
  SharedSearchRoute: typeof SharedSearchRoute;
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRoute,
  CreateContactRoute: CreateContactRoute,
  SearchRoute: SearchRoute,
  SharedSearchRoute: SharedSearchRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth",
        "/create-contact",
        "/search",
        "/shared-search"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/auth": {
      "filePath": "auth.tsx"
    },
    "/create-contact": {
      "filePath": "create-contact.tsx"
    },
    "/search": {
      "filePath": "search.tsx"
    },
    "/shared-search": {
      "filePath": "shared-search.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
