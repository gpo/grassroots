{
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelloOutDTO"
                }
              }
            }
          },
          "401": {
            "description": "Validation failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorOutDTO"
                }
              }
            }
          }
        },
        "tags": [
          "App"
        ]
      }
    },
    "/contacts": {
      "post": {
        "operationId": "ContactsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContactInDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactEntityOutDTO"
                }
              }
            }
          },
          "401": {
            "description": "Validation failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorOutDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Contacts"
        ]
      },
      "get": {
        "operationId": "ContactsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactEntityOutDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Validation failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorOutDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Contacts"
        ]
      }
    },
    "/contacts/bulk-create": {
      "post": {
        "operationId": "ContactsController_bulkCreate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBulkContactRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateBulkContactResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Validation failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorOutDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Contacts"
        ]
      }
    },
    "/contacts/search": {
      "post": {
        "operationId": "ContactsController_search",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaginatedContactSearchInDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedContactOutDTO"
                }
              }
            }
          },
          "401": {
            "description": "Validation failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorOutDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Contacts"
        ]
      }
    },
    "/contacts/{id}": {
      "get": {
        "operationId": "ContactsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetContactByIDResponse"
                }
              }
            }
          },
          "401": {
            "description": "Validation failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorOutDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Contacts"
        ]
      }
    }
  },
  "info": {
    "title": "Grassroots",
    "description": "The Grassroots API description",
    "version": "0.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "schemas": {
      "HelloOutDTO": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "required": [
          "message"
        ]
      },
      "CreateContactInDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "firstName",
          "lastName",
          "phoneNumber"
        ]
      },
      "ContactEntityOutDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "minimum": 0
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "email",
          "firstName",
          "lastName",
          "phoneNumber"
        ]
      },
      "CreateBulkContactRequestDto": {
        "type": "object",
        "properties": {
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateContactInDto"
            }
          }
        },
        "required": [
          "contacts"
        ]
      },
      "CreateBulkContactResponseDTO": {
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        },
        "required": [
          "ids"
        ]
      },
      "ContactSearchInDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "minimum": 0
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          }
        }
      },
      "PaginatedInDTO": {
        "type": "object",
        "properties": {
          "rowsToSkip": {
            "type": "number"
          },
          "rowsToTake": {
            "type": "number"
          }
        },
        "required": [
          "rowsToSkip",
          "rowsToTake"
        ]
      },
      "PaginatedContactSearchInDTO": {
        "type": "object",
        "properties": {
          "contact": {
            "$ref": "#/components/schemas/ContactSearchInDTO"
          },
          "paginated": {
            "$ref": "#/components/schemas/PaginatedInDTO"
          }
        },
        "required": [
          "contact",
          "paginated"
        ]
      },
      "PaginatedOutDTO": {
        "type": "object",
        "properties": {
          "rowsSkipped": {
            "type": "number",
            "minimum": 0
          },
          "rowsTotal": {
            "type": "number",
            "minimum": 0
          }
        },
        "required": [
          "rowsSkipped",
          "rowsTotal"
        ]
      },
      "PaginatedContactOutDTO": {
        "type": "object",
        "properties": {
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactEntityOutDTO"
            }
          },
          "paginated": {
            "$ref": "#/components/schemas/PaginatedOutDTO"
          }
        },
        "required": [
          "contacts",
          "paginated"
        ]
      },
      "GetContactByIDResponse": {
        "type": "object",
        "properties": {
          "contact": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/ContactEntityOutDTO"
              }
            ]
          }
        },
        "required": [
          "contact"
        ]
      },
      "ValidationErrorOutDTO": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number"
          },
          "message": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "error": {
            "type": "string"
          }
        },
        "required": [
          "statusCode",
          "message",
          "error"
        ]
      }
    }
  }
}