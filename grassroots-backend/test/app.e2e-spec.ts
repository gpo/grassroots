import { Test, TestingModule } from "@nestjs/testing";
import * as request from "supertest";
import { AppModule } from "./../src/app.module";
import createClient from "openapi-fetch";
import type { paths } from "../src/grassroots-shared/openAPI.gen"; // generated by openapi-typescript
import { NestExpressApplication } from "@nestjs/platform-express";

describe("AppController (e2e)", () => {
  let app: NestExpressApplication;

  beforeEach(async () => {
    const moduleFixture: TestingModule = await Test.createTestingModule({
      imports: [AppModule],
    }).compile();

    app = moduleFixture.createNestApplication();
    await app.init();
  });

  it("/ (GET)", () => {
    return request(app.getHttpServer())
      .get("/")
      .expect(200)
      .expect("Hello World!");
  });

  it("/ (GET) via OpenAPI Typescript Wrapper", async () => {
    // Use any free port.
    await app.listen(0);
    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions
    const { port } = app.getHttpServer().address() as {
      port: number | undefined;
    };
    if (port == undefined) {
      throw new Error("Couldn't start http server.");
    }
    const client = createClient<paths>({
      baseUrl: `http://localhost:${String(port)}`,
    });

    const { data } = await client.POST("/contacts", {
      body: {
        email: "test@test.com",
        firstName: "Test",
        lastName: "Test",
        phoneNumber: "999-999-9999",
      },
    });

    expect(data?.email).toBe("test@test.com");
    await app.close();
  });
});
