import { Test, TestingModule } from "@nestjs/testing";
import { AppModule, listenAndConfigureApp } from "./../src/app.module";
import createClient, { Client } from "openapi-fetch";
import type { paths } from "../src/grassroots-shared/openAPI.gen"; // generated by openapi-typescript
import { NestExpressApplication } from "@nestjs/platform-express";

describe("AppController (e2e)", () => {
  let app: NestExpressApplication;
  let grassrootsAPI: Client<paths>;

  beforeAll(async () => {
    const moduleFixture: TestingModule = await Test.createTestingModule({
      imports: [AppModule],
    }).compile();

    app = moduleFixture.createNestApplication();
    const { port } = await listenAndConfigureApp(app, 0);
    await app.init();
    grassrootsAPI = createClient<paths>({
      baseUrl: `http://localhost:${String(port)}`,
    });
  });

  afterAll(async () => {
    await app.close();
  });

  it("/ (GET)", async () => {
    const result = await grassrootsAPI.GET("/");
    expect(result.data?.message).toBe("Hello World!");
    expect(result.response.status).toBe(200);
  });

  it("creates a contact", async () => {
    const { data, response } = await grassrootsAPI.POST("/contacts", {
      body: {
        email: "test@test.com",
        firstName: "Test",
        lastName: "Test",
        phoneNumber: "226-999-9999",
      },
    });

    expect(response.status).toBe(201);
    expect(data?.email).toBe("test@test.com");
  });

  it("validates its inputs", async () => {
    const result = await grassrootsAPI.POST("/contacts", {
      body: {
        // eslint-disable-next-line @typescript-eslint/consistent-type-assertions
        email: 0 as unknown as string,
        firstName: "Test",
        lastName: "Test",
        phoneNumber: "226-999-9999",
      },
    });
    expect(result.response.status).toEqual(400);
    expect(result.error?.messages).toEqual(["email must be an email"]);
  });
});
